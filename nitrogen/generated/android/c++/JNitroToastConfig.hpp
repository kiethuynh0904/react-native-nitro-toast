///
/// JNitroToastConfig.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "NitroToastConfig.hpp"

#include "AlertToastType.hpp"
#include "JAlertToastType.hpp"
#include "JPositionToastType.hpp"
#include "JPresentationToastType.hpp"
#include "PositionToastType.hpp"
#include "PresentationToastType.hpp"
#include <optional>
#include <string>

namespace margelo::nitro::nitrotoast {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "NitroToastConfig" and the the Kotlin data class "NitroToastConfig".
   */
  struct JNitroToastConfig final: public jni::JavaClass<JNitroToastConfig> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/nitrotoast/NitroToastConfig;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct NitroToastConfig by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    NitroToastConfig toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldType = clazz->getField<JAlertToastType>("type");
      jni::local_ref<JAlertToastType> type = this->getFieldValue(fieldType);
      static const auto fieldPresentation = clazz->getField<JPresentationToastType>("presentation");
      jni::local_ref<JPresentationToastType> presentation = this->getFieldValue(fieldPresentation);
      static const auto fieldDuration = clazz->getField<double>("duration");
      double duration = this->getFieldValue(fieldDuration);
      static const auto fieldTitle = clazz->getField<jni::JString>("title");
      jni::local_ref<jni::JString> title = this->getFieldValue(fieldTitle);
      static const auto fieldPosition = clazz->getField<JPositionToastType>("position");
      jni::local_ref<JPositionToastType> position = this->getFieldValue(fieldPosition);
      return NitroToastConfig(
        type->toCpp(),
        presentation->toCpp(),
        duration,
        title != nullptr ? std::make_optional(title->toStdString()) : std::nullopt,
        position->toCpp()
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JNitroToastConfig::javaobject> fromCpp(const NitroToastConfig& value) {
      return newInstance(
        JAlertToastType::fromCpp(value.type),
        JPresentationToastType::fromCpp(value.presentation),
        value.duration,
        value.title.has_value() ? jni::make_jstring(value.title.value()) : nullptr,
        JPositionToastType::fromCpp(value.position)
      );
    }
  };

} // namespace margelo::nitro::nitrotoast
